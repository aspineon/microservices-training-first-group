apiVersion: v1
kind: ConfigMap
metadata:
  name: global-config-map
data:
  ACTIVE_PROFILE: production
  CONFIGURATION_SERVER_URI: http://configuration-service:8888
  KAFKA_ADVERTISED_HOST_NAME: kafka-service
  KAFKA_ZOOKEEPER_CONNECT: zookeeper-service
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config-map
data:
  POSTGRES_DB: products
  POSTGRES_USER: admin
  POSTGRES_PASSWORD: admin
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: products-volume
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /tmp/products
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: products-volume-claim
spec:
  resources:
    requests:
      storage: 1Gi
  accessModes:
    - ReadWriteMany
---
apiVersion: v1
kind: Pod
metadata:
  name: zookeeper-pod
  labels:
    app-name: zookeeper-app
spec:
  containers:
    - name: zookeeper
      image: wurstmeister/zookeeper
      ports:
        - name: service
          containerPort: 2181
---
apiVersion: v1
kind: Pod
metadata:
  name: kafka-pod
  labels:
    app-name: kafka-app
spec:
  containers:
    - name: kafka
      image: wurstmeister/kafka
      envFrom:
        - configMapRef:
            name: global-config-map
      ports:
        - name: service
          containerPort: 9092
---
apiVersion: v1
kind: Pod
metadata:
  name: postgres-pod
  labels:
    app-name: postgres-app
spec:
  containers:
    - name: postgres
      image: postgres:11.1
      envFrom:
        - configMapRef:
            name: postgres-config-map
      volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: storage
      ports:
        - name: service
          containerPort: 5432
  volumes:
    - name: storage
      persistentVolumeClaim:
        claimName: products-volume-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: configuration-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app-name: configuration-app
  template:
      metadata:
        labels:
          app-name: configuration-app
      spec:
        containers:
          - name: configuration
            image: landrzejewski/training-configuration
            envFrom:
              - configMapRef:
                  name: global-config-map
            ports:
              - name: http
                containerPort: 8888
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: orders-replica-set
spec:
  replicas: 3
  selector:
    matchLabels:
      app-name: orders-app
  template:
    metadata:
      labels:
        app-name: orders-app
    spec:
      containers:
        - name: orders
          image: landrzejewski/training-orders
          envFrom:
            - configMapRef:
                name: global-config-map
          ports:
            - name: http
              containerPort: 9002
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: payments-replica-set
spec:
  replicas: 3
  selector:
    matchLabels:
      app-name: payments-app
  template:
    metadata:
      labels:
        app-name: payments-app
    spec:
      containers:
        - name: payments
          image: landrzejewski/training-payments
          envFrom:
            - configMapRef:
                name: global-config-map
          ports:
            - name: http
              containerPort: 9003
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: products-replica-set
spec:
  replicas: 3
  selector:
    matchLabels:
      app-name: products-app
  template:
    metadata:
      labels:
        app-name: products-app
    spec:
      containers:
        - name: products
          image: landrzejewski/training-products
          envFrom:
            - configMapRef:
                name: global-config-map
          ports:
            - name: http
              containerPort: 9001
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
spec:
  selector:
    app-name: zookeeper-app
  ports:
    - port: 2181
      targetPort: service
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
spec:
  selector:
    app-name: kafka-app
  ports:
    - port: 9092
      targetPort: service
---
apiVersion: v1
kind: Service
metadata:
  name: products-database-service
spec:
  selector:
    app-name: postgres-app
  ports:
    - port: 5432
      targetPort: service
---
apiVersion: v1
kind: Service
metadata:
  name: configuration-service
spec:
  selector:
    app-name: configuration-app
  ports:
    - port: 8888
      targetPort: http
---
apiVersion: v1
kind: Service
metadata:
  name: orders-service
spec:
  selector:
    app-name: orders-app
  ports:
    - port: 80
      targetPort: http
---
apiVersion: v1
kind: Service
metadata:
  name: payments-service
spec:
  selector:
    app-name: payments-app
  ports:
    - port: 80
      targetPort: http
---
apiVersion: v1
kind: Service
metadata:
  name: products-service
spec:
  selector:
    app-name: products-app
  ports:
    - port: 80
      targetPort: http
---
apiVersion: v1
kind: Service
metadata:
  name: orders-external-service
spec:
  type: LoadBalancer
  selector:
    app-name: orders-app
  ports:
    - port: 80
      targetPort: http
      nodePort: 30000